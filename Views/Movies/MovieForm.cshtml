@model MovieFormViewModel

@{
    ViewData["Title"] = "New";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (Model == null)
{
    <h1>New Movie</h1>
}
else
{
    <h1>Edit Movie</h1>
}

<hr />
@using (Html.BeginForm("Save", "Movies"))
{
    @Html.ValidationSummary(true, "Please, fix the missing information!")
    <div class="form-group">
        @Html.LabelFor(m => m.Movie.Name)*
        @Html.TextBoxFor(m => m.Movie.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(m =>m.Movie.Name, "", new { @class="text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Movie.ReleaseDate)*
        @Html.TextBoxFor(m => m.Movie.ReleaseDate, "{0: dd MMM yyyy}", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Movie.ReleaseDate, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Movie.DateAdded)*
        @Html.TextBoxFor(m => m.Movie.DateAdded, "{0: dd MMM yyyy}", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Movie.DateAdded, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Movie.NumberInStock)*
        @Html.TextBoxFor(m => m.Movie.NumberInStock, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Movie.NumberInStock, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.GenresList)*
        @Html.DropDownListFor(m => m.Movie.GenreId, new SelectList(Model.GenresList, "Id", "Name"), "Select a Genre", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Movie.GenreId)
    </div>
    @Html.HiddenFor(m => m.Movie.Id)
    @Html.AntiForgeryToken();
    <button type="submit" class="btn btn-lg btn-primary my-2">Submit</button>
}
<div>
    <a asp-action="Index">Back to List</a>
</div>

